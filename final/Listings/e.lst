C51 COMPILER V9.60.7.0   E                                                                 12/26/2023 21:01:35 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE E
OBJECT MODULE PLACED IN .\Objects\e.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE e.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\e.lst) 
                    -TABS(2) OBJECT(.\Objects\e.obj)

line level    source

   1          #include <regx52.h>
   2          #include <string.h>
   3          
   4          void print_msg(char[]);
   5          void write(char, int); 
   6          void delay(unsigned int);
   7          int itr0 = 0; // interrupt 0 counter
   8          int itr1 = 0; // interrupt 1 counter
   9          int counter0 = 0; // timer counter
  10          int counter1 = 0; // timer counter
  11          char roll_msg[] = "Final exam      ";
  12          int roll_count = 0;
  13          char adc_msg[4];
  14          int adc_count = 0;
  15          int hundreds, tens, ones;
  16          
  17          void main() {
  18   1          TMOD = 0x02;
  19   1          PX1=1;
  20   1          ET0=1;
  21   1          TL0=0x00;
  22   1          TH0=0x00;
  23   1      
  24   1          IT0=0;
  25   1          IT1=0;
  26   1          EX0=1;
  27   1          EX1=1;
  28   1          EA=1;
  29   1          write(0x38, 0); // use 2 lines and 5x7 matrix
  30   1          write(0x0F, 0); // LCD ON, cursor ON, cursor blinking ON
  31   1          write(0x06, 0); // increment cursor
  32   1          write(0x01, 0); // clear screen
  33   1          while(itr0==0 && itr1==0){
  34   2              write(0x01, 0); // clear screen
  35   2              write(0x80, 0); // DDRAM 1st row 1st column (00H)
  36   2              
  37   2              hundreds = P0 / 100;
  38   2              tens = (P0 / 10) % 10;
  39   2              ones = P0 % 10;
  40   2              adc_msg[0] = hundreds + 48;
  41   2              adc_msg[1] = tens + 48;
  42   2              adc_msg[2] = ones + 48;
  43   2              print_msg(adc_msg);
  44   2      
  45   2              write(0xC0, 0); // DDRAM 2nd row 1st column (40H)
  46   2              if(P0 < 20){
  47   3                  print_msg("=");
  48   3              }
  49   2              else if(P0 < 40){
  50   3                  print_msg("==");
  51   3              }
  52   2              else if(P0 < 60){
  53   3                  print_msg("===");
  54   3              }
C51 COMPILER V9.60.7.0   E                                                                 12/26/2023 21:01:35 PAGE 2   

  55   2              else if(P0 < 80){
  56   3                  print_msg("====");
  57   3              }
  58   2              else if(P0 < 120){
  59   3                  print_msg("=====");
  60   3              }
  61   2              else if(P0 < 140){
  62   3                  print_msg("======");
  63   3              }
  64   2              else if(P0 < 160){
  65   3                  print_msg("=======");
  66   3              }
  67   2              else if(P0 < 180){
  68   3                  print_msg("========");
  69   3              }
  70   2              else if(P0 < 200){
  71   3                  print_msg("=========");
  72   3              }
  73   2              else if(P0 < 220){
  74   3                  print_msg("==========");
  75   3              }
  76   2              else if(P0 < 240){
  77   3                  print_msg("===========");
  78   3              }
  79   2              else if(P0 < 256){
  80   3                  print_msg("============");
  81   3              }
  82   2              delay(16383);
  83   2          }
  84   1          while(1);
  85   1      }
  86          
  87          void int_0(void) interrupt 0 {
  88   1          if(itr0 == 0){
  89   2              write(0x08, 0);
  90   2              P2_0=0;
  91   2          }
  92   1          else if(itr0 == 1){
  93   2              write(0x0F, 0);
  94   2              write(0x01, 0);
  95   2              write(0x80, 0);
  96   2              print_msg("E94106216");
  97   2      
  98   2              //skull
  99   2              write(0x40,0); //RAM POSITION
 100   2              write(0x00,1);
 101   2              write(0x0E,1);
 102   2              write(0x1F,1);
 103   2              write(0x15,1);
 104   2              write(0x0E,1);
 105   2              write(0x0E,1);
 106   2              write(0x00,1);
 107   2              write(0x00,1); //CURSOR
 108   2              //smile------------------------------------
 109   2              write(0x48,0); //RAM POSITION
 110   2              write(0x00,1);
 111   2              write(0x0A,1);
 112   2              write(0x0A,1);
 113   2              write(0x00,1);
 114   2              write(0x11,1);
 115   2              write(0x0E,1);
 116   2              write(0x00,1);  
C51 COMPILER V9.60.7.0   E                                                                 12/26/2023 21:01:35 PAGE 3   

 117   2              write(0x00,1);  //CURSOR
 118   2      
 119   2              write(0xCE,0);//PRINT POSITION
 120   2              write(0x00,1);
 121   2              write(0xCF,0);//PRINT POSITION
 122   2              write(0x01,1);
 123   2      
 124   2              P2_1=0;
 125   2          }
 126   1          else if(itr0 == 2){
 127   2              P2_2=0;
 128   2              write(0x01, 0);
 129   2              write(0x80, 0);
 130   2              print_msg("1");
 131   2              write(0xC0, 0);
 132   2              print_msg("2");
 133   2          }
 134   1      
 135   1          itr0++;
 136   1          delay(65535);
 137   1      }
 138          
 139          void int_1(void) interrupt 2 {
 140   1          if(itr1 == 0){
 141   2              write(0x01, 0);
 142   2              write(0x80, 0);
 143   2              print_msg("Final exam      ");
 144   2          }
 145   1          else if(itr1 == 1){
 146   2              TR0=1;
 147   2              P2_0=0;
 148   2          }
 149   1          else if(itr1 == 2){
 150   2      
 151   2          }
 152   1          else if(itr1 == 3){
 153   2              TR0=0;
 154   2          }
 155   1          itr1++;
 156   1          delay(65535);
 157   1      }
 158          
 159          void timer_0(void) interrupt 1 {
 160   1          int k;
 161   1          char temp;
 162   1          counter0++;
 163   1          if(counter0 == 255){
 164   2              counter1++;
 165   2              counter0 = 0;
 166   2          }
 167   1          if(counter1 == 10){
 168   2              if(itr1 == 2){
 169   3                  temp = roll_msg[15];
 170   3                  for(k=15; k>0; k--){
 171   4                      roll_msg[k] = roll_msg[k-1];
 172   4                  }
 173   3                  roll_msg[0] = temp;
 174   3                  write(0x01, 0);
 175   3                  write(0x80, 0);
 176   3                  print_msg(roll_msg);
 177   3                  counter1=0;
 178   3              }
C51 COMPILER V9.60.7.0   E                                                                 12/26/2023 21:01:35 PAGE 4   

 179   2              else if(itr1 == 3){
 180   3                  if(roll_count>10){
 181   4                      strcpy(roll_msg, "      Final exam");
 182   4                  }
 183   3                  else{
 184   4                      for(k=0; k<16; k++){
 185   5                          roll_msg[k] = roll_msg[k+1];
 186   5                      }
 187   4                  }
 188   3                  write(0x01, 0);
 189   3                  write(0x80, 0);
 190   3                  print_msg(roll_msg);
 191   3                  counter1=0;
 192   3              }
 193   2          }
 194   1      }
 195          
 196          void print_msg(char msg[]) {
 197   1          int i;
 198   1          for (i=0; i<strlen(msg); i++) // for every character
 199   1              write(msg[i], 1); // monitor displays character
 200   1      }
 201          
 202          void write(char cmd, int rs_value) {
 203   1          P1 = cmd; // P1=cmd
 204   1          P3_6 = rs_value; // RS=rs (1or0)
 205   1          P3_7 = 1; // ENABLE high
 206   1          delay(100);
 207   1          P3_7 = 0; // ENABLE low
 208   1      }
 209          
 210          void delay(unsigned int i) {
 211   1          while (i--); 
 212   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1191    ----
   CONSTANT SIZE    =    138    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     39       7
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
